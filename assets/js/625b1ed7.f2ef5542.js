"use strict";(self.webpackChunkapi_docs_generator=self.webpackChunkapi_docs_generator||[]).push([[831],{5159:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"authentication","title":"Authentication and Onboarding","description":"The Harbour API authenticates users via their crypto wallet. It supports different authentication methods depending on","source":"@site/docs/authentication.md","sourceDirName":".","slug":"/authentication","permalink":"/docs/authentication","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"API Concepts","permalink":"/docs/concepts"},"next":{"title":"Use Cases","permalink":"/docs/use-cases"}}');var s=t(4848),r=t(8453);const a={sidebar_position:3},o="Authentication and Onboarding",c={},h=[{value:"Message Signing",id:"message-signing",level:2},{value:"Session Token",id:"session-token",level:2},{value:"User Authentication",id:"user-authentication",level:2},{value:"Customer Onboarding",id:"customer-onboarding",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authentication-and-onboarding",children:"Authentication and Onboarding"})}),"\n",(0,s.jsx)(n.p,{children:"The Harbour API authenticates users via their crypto wallet. It supports different authentication methods depending on\nthe use case, such as signing each individual message or obtaining a session token."}),"\n",(0,s.jsx)(n.p,{children:"Authentication is required for most operations, however some endpoints are public and do not require authentication,\nsuch as retrieving supported assets and price quotes."}),"\n",(0,s.jsx)(n.h2,{id:"message-signing",children:"Message Signing"}),"\n",(0,s.jsx)(n.p,{children:"This method is most suited for crypto wallets that would like to embed Harbour in their own UI. They can simply derive\na key deterministically from the HD wallet and sign each message with it. Harbour supports several different digital\nsignature algorithms, so that each wallet can use cryptographic primitives that are native to their ecosystem, such as\nsigning a keccak256 digest with a secp256k1 key on EVM chains."}),"\n",(0,s.jsx)(n.p,{children:"In this configuration, every API request will contain special headers specifying the signature type and the signature\nof the request body."}),"\n",(0,s.jsx)(n.p,{children:'With this method, each API interaction will be considered an "authenticated wallet" from Harbour\'s point of view.'}),"\n",(0,s.jsx)(n.h2,{id:"session-token",children:"Session Token"}),"\n",(0,s.jsxs)(n.p,{children:["This is better suited for web or mobile applications that do not have control over the user's keys. In this case, the\nweb3 SDKs can be used to prompt a user's wallet to sign a custom authentication message, such as\n'harbour-auth",":timestamp","'. The signed message is then sent to Harbour's API, which verifies the signature and returns\na session token. Any subsequent API interaction can include this token, which has a limited lifetime."]}),"\n",(0,s.jsx)(n.p,{children:'The session token will be considered an "authenticated wallet" from Harbour\'s point of view, the exact same as with the\nabove-mentioned message signing method.'}),"\n",(0,s.jsx)(n.h2,{id:"user-authentication",children:"User Authentication"}),"\n",(0,s.jsx)(n.p,{children:"Harbour keeps track of all authenticated wallets. Initially, each wallet will be considered an anonymous user.\nIn that case, the Harbour Auth API will return a redirect URL. The integrating app will either redirect or embed an\niframe with this URL, where the user will be prompted to either sign up or sign in. The user's phone number will be used\nto determine whether they are an existing customer or not."}),"\n",(0,s.jsx)(n.p,{children:"User sign in consists in simply re-verifying the phone number via OTP and asking a security question.\nUser sign up consists in a Fintech-grade onboarding flow (see paragraph below)."}),"\n",(0,s.jsx)(n.p,{children:"Once sign up or sign in is successful, the wallet's public key is associated with a Harbour customer, and any future\ninteraction from that authenticated wallet will require no further authentication, offering a true web3 native,\npassword-less, crypto-wallet-driven experience."}),"\n",(0,s.jsx)(n.h2,{id:"customer-onboarding",children:"Customer Onboarding"}),"\n",(0,s.jsx)(n.p,{children:"All KYC and KYB Checks are handled by Harbour, so the integrating app does not need to worry about building or\nmaintaining KYC/KYB user-journeys, policies or procedures yourself."}),"\n",(0,s.jsx)(n.p,{children:"For new users, the Authentication API will return a redirect URL, so that the integrating app can either redirect or\nembed an iframe with Harbour\u2019s onboarding journey. The user is then taken through an identity verification process where\nthey will submit their personal details, identity information, government-issued ID and a selfie directly to Harbour for\nverification."}),"\n",(0,s.jsx)(n.p,{children:"As part of the onboarding journey Customers are asked to agree to Harbour\u2019s account terms and conditions and privacy\npolicy directly. Customer\u2019s access to Harbour\u2019s products and services is automatically granted upon completion of the\nonboarding KYC/KYB process."}),"\n",(0,s.jsx)(n.p,{children:"Harbour will communicate directly with Customers if any additional information is needed during the onboarding process."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);